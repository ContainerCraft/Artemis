---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/app-root: "/"
    ingress.kubernetes.io/proxy-body-size: 100M
    cert-manager.io/common-name: "argocd.ops.home.arpa"
    cert-manager.io/cluster-issuer: cluster-selfsigned-issuer
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: "default"
  tls:
  - hosts:
    - argocd.home.arpa
    secretName: argocd-secret
  rules:
  - host: argocd.home.arpa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpc-argocd-server-ingress
  namespace: argocd
  annotations:
    ingress.kubernetes.io/app-root: "/"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    cert-manager.io/cluster-issuer: cluster-selfsigned-issuer
    cert-manager.io/common-name: "grpc.argocd.ops.home.arpa"
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: "default"
  tls:
  - hosts:
    - grpc.argocd.home.arpa
    secretName: argocd-secret
  rules:
  - host: grpc.argocd.home.arpa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https